#!/usr/bin/env bash
# Date: 20140917
# Description: This script generates screencasts with audio; in webM format.
# Requirements: ffmpeg
# Author: Renich Bon Ciric <renich@woralelandia.com>
# License: GPLv3

# vars
cpu_no=$(( 1 + $( lscpu -p | tail -n 1 | cut -d ',' -f 1 ) ))
date=$( date +%Y%m%d-%H%M%S )
format='webm'
framerate=10
log_level='quiet'
name=${1:-screencast}
path=~/Videos/screencasts
resolution='1920x1080'


# functions
bootstrap() {
    # check if ffmpeg is present
    if [[ ! $( which ffmpeg ) ]]; then
        echo "You don't have ffmpeg installed. Please install it first."
        exit 1
    fi

    # check if dir exists
    if [[ ! -d ${path}  ]]; then
        mkdir -p -m 640 ${path};
    fi
}

clean_up() {
    echo
    echo "ending process with PID ${video_pid}"
    kill ${video_pid}
}

control_c() {
    clean_up
    exit $?
}

start_minicam() {
    ffplay -threads ${cpu_no} -loglevel quiet -f v4l2 -framerate ${framerate} -i /dev/video0 -video_size 320x240 &
    video_pid=${!}
}

record_screen() {
    bootstrap

    echo "Recording screencast in ${path}/${date}-${name}.${format}; in ${resolution} @ ${framerate} FPS..."
    echo "Please, press 'q, <enter>' when done."

    ffmpeg -loglevel ${log_level} -threads ${cpu_no} -f pulse -i default -f x11grab -framerate ${framerate} -s ${resolution} -i $DISPLAY ~/Videos/screencasts/${date}-${name}.${format}

    clean_up
}


# do
start_minicam
record_screen


# trap ctrl+c if it happens
trap control_c SIGINT 

exit 0
